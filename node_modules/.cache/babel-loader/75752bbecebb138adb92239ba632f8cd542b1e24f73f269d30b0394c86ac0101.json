{"ast":null,"code":"function encodeQueryParams(paramConfigMap, query) {\n  const encodedQuery = {};\n  const paramNames = Object.keys(query);\n  for (const paramName of paramNames) {\n    const decodedValue = query[paramName];\n    if (!paramConfigMap[paramName]) {\n      encodedQuery[paramName] = decodedValue == null ? decodedValue : String(decodedValue);\n    } else {\n      encodedQuery[paramName] = paramConfigMap[paramName].encode(query[paramName]);\n    }\n  }\n  return encodedQuery;\n}\nvar encodeQueryParams_default = encodeQueryParams;\nexport { encodeQueryParams_default as default, encodeQueryParams };","map":{"version":3,"mappings":"AASO,SAASA,kBACdC,gBACAC,OACkC;EAClC,MAAMC,eAAiD,CAAC;EAExD,MAAMC,aAAaC,OAAOC,KAAKJ,KAAK;EACpC,WAAWK,aAAaH,YAAY;IAClC,MAAMI,eAAeN,MAAMK;IAE3B,IAAI,CAACN,eAAeM,YAAY;MAG7BJ,aAAqBI,aACpBC,gBAAgB,OAAOA,eAAeC,OAAOD,YAAY;IAC7D,OAAO;MACLL,aAAaI,aAA6BN,eACxCM,WACAG,OAAOR,MAAMK,UAAU;IAC3B;EACF;EAEA,OAAOJ;AACT;AACA,IAAOQ,4BAAQX","names":["encodeQueryParams","paramConfigMap","query","encodedQuery","paramNames","Object","keys","paramName","decodedValue","String","encode","encodeQueryParams_default"],"sources":["/Users/elahehaslani/Documents/GitHub/movie-ticket-booking/node_modules/serialize-query-params/src/encodeQueryParams.ts"],"sourcesContent":["import { DecodedValueMap, QueryParamConfigMap, EncodedValueMap } from './types';\n\n/**\n * Convert the values in query to strings via the encode functions configured\n * in paramConfigMap\n *\n * @param paramConfigMap Map from query name to { encode, decode } config\n * @param query Query updates mapping param name to decoded value\n */\nexport function encodeQueryParams<QPCMap extends QueryParamConfigMap>(\n  paramConfigMap: QPCMap,\n  query: Partial<DecodedValueMap<QPCMap>>\n): Partial<EncodedValueMap<QPCMap>> {\n  const encodedQuery: Partial<EncodedValueMap<QPCMap>> = {};\n\n  const paramNames = Object.keys(query);\n  for (const paramName of paramNames) {\n    const decodedValue = query[paramName];\n\n    if (!paramConfigMap[paramName]) {\n      // NOTE: we could just not encode it, but it is probably convenient to have\n      // it be included by default as a string type.\n      (encodedQuery as any)[paramName] =\n        decodedValue == null ? decodedValue : String(decodedValue);\n    } else {\n      encodedQuery[paramName as keyof QPCMap] = paramConfigMap[\n        paramName\n      ].encode(query[paramName]);\n    }\n  }\n\n  return encodedQuery;\n}\nexport default encodeQueryParams;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}