{"ast":null,"code":"function objectToSearchString(encodedParams) {\n  const params = new URLSearchParams();\n  const entries = Object.entries(encodedParams);\n  for (const [key, value] of entries) {\n    if (value === void 0) continue;\n    if (value === null) continue;\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        params.append(key, item != null ? item : \"\");\n      }\n    } else {\n      params.append(key, value);\n    }\n  }\n  return params.toString();\n}\nexport { objectToSearchString };","map":{"version":3,"mappings":"AASO,SAASA,qBAAqBC,eAAqC;EACxE,MAAMC,SAAS,IAAIC,iBAAgB;EACnC,MAAMC,UAAUC,OAAOD,QAAQH,aAAa;EAE5C,WAAW,CAACK,KAAKC,KAAK,KAAKH,SAAS;IAClC,IAAIG,UAAU,QAAW;IACzB,IAAIA,UAAU,MAAM;IAEpB,IAAIC,MAAMC,QAAQF,KAAK,GAAG;MACxB,WAAWG,QAAQH,OAAO;QACxBL,OAAOS,OAAOL,KAAKI,sBAAQ,EAAE;MAC/B;IACF,OAAO;MACLR,OAAOS,OAAOL,KAAKC,KAAK;IAC1B;EACF;EAEA,OAAOL,OAAOU,UAAS;AACzB","names":["objectToSearchString","encodedParams","params","URLSearchParams","entries","Object","key","value","Array","isArray","item","append","toString"],"sources":["/Users/elahehaslani/Work/Sample-Project/ticket-booking/ticket-booking/node_modules/serialize-query-params/src/objectToSearchString.ts"],"sourcesContent":["import { EncodedQuery } from './types';\n\n/**\n * Default implementation of objectToSearchString powered by URLSearchParams.\n * Does not support null values. Does not prefix with \"?\"\n * This converts an object { foo: '123', bar: 'x' } to a search string `?foo=123&bar=x`\n * This is only a very basic version, you may prefer the advanced versions offered\n * by third party libraries like query-string (\"stringify\") or qs.\n */\nexport function objectToSearchString(encodedParams: EncodedQuery): string {\n  const params = new URLSearchParams();\n  const entries = Object.entries(encodedParams);\n\n  for (const [key, value] of entries) {\n    if (value === undefined) continue;\n    if (value === null) continue;\n\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        params.append(key, item ?? '');\n      }\n    } else {\n      params.append(key, value);\n    }\n  }\n\n  return params.toString();\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}