{"ast":null,"code":"function searchStringToObject(searchString) {\n  const params = new URLSearchParams(searchString);\n  const parsed = {};\n  for (let [key, value] of params) {\n    if (Object.prototype.hasOwnProperty.call(parsed, key)) {\n      if (Array.isArray(parsed[key])) {\n        parsed[key].push(value);\n      } else {\n        parsed[key] = [parsed[key], value];\n      }\n    } else {\n      parsed[key] = value;\n    }\n  }\n  return parsed;\n}\nexport { searchStringToObject };","map":{"version":3,"mappings":"AAQO,SAASA,qBAAqBC,cAAoC;EACvE,MAAMC,SAAS,IAAIC,gBAAgBF,YAAY;EAC/C,MAAMG,SAAuB,CAAC;EAC9B,SAAS,CAACC,KAAKC,KAAK,KAAKJ,QAAQ;IAC/B,IAAIK,OAAOC,UAAUC,eAAeC,KAAKN,QAAQC,GAAG,GAAG;MACrD,IAAIM,MAAMC,QAAQR,OAAOC,IAAI,GAAG;QAC7BD,OAAOC,KAAkBQ,KAAKP,KAAK;MACtC,OAAO;QACLF,OAAOC,OAAO,CAACD,OAAOC,MAAgBC,KAAK;MAC7C;IACF,OAAO;MACLF,OAAOC,OAAOC;IAChB;EACF;EAEA,OAAOF;AACT","names":["searchStringToObject","searchString","params","URLSearchParams","parsed","key","value","Object","prototype","hasOwnProperty","call","Array","isArray","push"],"sources":["/Users/elahehaslani/Work/Sample-Project/ticket-booking/ticket-booking/node_modules/serialize-query-params/src/searchStringToObject.ts"],"sourcesContent":["import { EncodedQuery } from './types';\n\n/**\n * Default implementation of searchStringToObject powered by URLSearchParams\n * This converts a search string like `?foo=123&bar=x` to { foo: '123', bar: 'x' }\n * This is only a very basic version, you may prefer the advanced versions offered\n * by third party libraries like query-string (\"parse\") or qs.\n */\nexport function searchStringToObject(searchString: string): EncodedQuery {\n  const params = new URLSearchParams(searchString);\n  const parsed: EncodedQuery = {};\n  for (let [key, value] of params) {\n    if (Object.prototype.hasOwnProperty.call(parsed, key)) {\n      if (Array.isArray(parsed[key])) {\n        (parsed[key] as string[]).push(value);\n      } else {\n        parsed[key] = [parsed[key] as string, value];\n      }\n    } else {\n      parsed[key] = value;\n    }\n  }\n\n  return parsed;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}