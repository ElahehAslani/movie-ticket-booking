{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveBrowserslistConfigFile = resolveBrowserslistConfigFile;\nexports.resolveTargets = resolveTargets;\nfunction _helperCompilationTargets() {\n  const data = require(\"@babel/helper-compilation-targets\");\n  _helperCompilationTargets = function () {\n    return data;\n  };\n  return data;\n}\nfunction resolveBrowserslistConfigFile(browserslistConfigFile, configFilePath) {\n  return undefined;\n}\nfunction resolveTargets(options, root) {\n  const optTargets = options.targets;\n  let targets;\n  if (typeof optTargets === \"string\" || Array.isArray(optTargets)) {\n    targets = {\n      browsers: optTargets\n    };\n  } else if (optTargets) {\n    if (\"esmodules\" in optTargets) {\n      targets = Object.assign({}, optTargets, {\n        esmodules: \"intersect\"\n      });\n    } else {\n      targets = optTargets;\n    }\n  }\n  return (0, _helperCompilationTargets().default)(targets, {\n    ignoreBrowserslistConfig: true,\n    browserslistEnv: options.browserslistEnv\n  });\n}\n0 && 0;","map":{"version":3,"mappings":";;;;;;;AACA;EAAA;EAAAA;IAAA;EAAA;EAAA;AAAA;AAMO,SAASC,6BAA6B,CAE3CC,sBAA8B,EAE9BC,cAAsB,EACP;EACf,OAAOC,SAAS;AAClB;AAEO,SAASC,cAAc,CAC5BC,OAAyB,EAEzBC,IAAY,EACH;EACT,MAAMC,UAAU,GAAGF,OAAO,CAACG,OAAO;EAClC,IAAIA,OAAqB;EAEzB,IAAI,OAAOD,UAAU,KAAK,QAAQ,IAAIE,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,EAAE;IAC/DC,OAAO,GAAG;MAAEG,QAAQ,EAAEJ;IAAW,CAAC;EACpC,CAAC,MAAM,IAAIA,UAAU,EAAE;IACrB,IAAI,WAAW,IAAIA,UAAU,EAAE;MAC7BC,OAAO,qBAAQD,UAAU;QAAEK,SAAS,EAAE;MAAW,EAAE;IACrD,CAAC,MAAM;MAELJ,OAAO,GAAGD,UAA0B;IACtC;EACF;EAEA,OAAO,uCAAU,EAACC,OAAO,EAAE;IACzBK,wBAAwB,EAAE,IAAI;IAC9BC,eAAe,EAAET,OAAO,CAACS;EAC3B,CAAC,CAAC;AACJ;AAAC","names":["_helperCompilationTargets","resolveBrowserslistConfigFile","browserslistConfigFile","configFilePath","undefined","resolveTargets","options","root","optTargets","targets","Array","isArray","browsers","esmodules","ignoreBrowserslistConfig","browserslistEnv"],"sources":["/Users/elahehaslani/Work/Sample-Project/ticket-booking/ticket-booking/node_modules/@babel/core/src/config/resolve-targets-browser.ts"],"sourcesContent":["import type { ValidatedOptions } from \"./validation/options\";\nimport getTargets, {\n  type InputTargets,\n} from \"@babel/helper-compilation-targets\";\n\nimport type { Targets } from \"@babel/helper-compilation-targets\";\n\nexport function resolveBrowserslistConfigFile(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  browserslistConfigFile: string,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  configFilePath: string,\n): string | void {\n  return undefined;\n}\n\nexport function resolveTargets(\n  options: ValidatedOptions,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  root: string,\n): Targets {\n  const optTargets = options.targets;\n  let targets: InputTargets;\n\n  if (typeof optTargets === \"string\" || Array.isArray(optTargets)) {\n    targets = { browsers: optTargets };\n  } else if (optTargets) {\n    if (\"esmodules\" in optTargets) {\n      targets = { ...optTargets, esmodules: \"intersect\" };\n    } else {\n      // https://github.com/microsoft/TypeScript/issues/17002\n      targets = optTargets as InputTargets;\n    }\n  }\n\n  return getTargets(targets, {\n    ignoreBrowserslistConfig: true,\n    browserslistEnv: options.browserslistEnv,\n  });\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}