{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _assert = require(\"assert\");\nvar _t = require(\"@babel/types\");\nconst {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n  import() {\n    this._statements.push(importDeclaration([], stringLiteral(this._importedSource)));\n    return this;\n  }\n  require() {\n    this._statements.push(expressionStatement(callExpression(identifier(\"require\"), [stringLiteral(this._importedSource)])));\n    return this;\n  }\n  namespace() {\n    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"namespace\";\n    const local = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    _assert(statement.type === \"ImportDeclaration\");\n    _assert(statement.specifiers.length === 0);\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n  default(name) {\n    const id = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    _assert(statement.type === \"ImportDeclaration\");\n    _assert(statement.specifiers.length === 0);\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n    const id = this._scope.generateUidIdentifier(name);\n    const statement = this._statements[this._statements.length - 1];\n    _assert(statement.type === \"ImportDeclaration\");\n    _assert(statement.specifiers.length === 0);\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n  var(name) {\n    const id = this._scope.generateUidIdentifier(name);\n    let statement = this._statements[this._statements.length - 1];\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n      statement = expressionStatement(this._resultName);\n      this._statements.push(statement);\n    }\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [variableDeclarator(id, statement.expression)]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n      statement.declarations[0].init = callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n    return this;\n  }\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(statement.expression, identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n      statement.declarations[0].init = memberExpression(statement.declarations[0].init, identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n    return this;\n  }\n  read(name) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n}\nexports.default = ImportBuilder;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_assert","require","_t","callExpression","cloneNode","expressionStatement","identifier","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","importSpecifier","memberExpression","stringLiteral","variableDeclaration","variableDeclarator","ImportBuilder","constructor","importedSource","scope","hub","_statements","_resultName","_importedSource","_scope","_hub","done","statements","resultName","import","push","namespace","name","local","generateUidIdentifier","statement","length","type","specifiers","id","named","importName","var","expression","defaultInterop","_interop","addHelper","wildcardInterop","callee","declarations","init","fail","prop","read"],"sources":["/Users/elahehaslani/Work/Sample-Project/ticket-booking/ticket-booking/node_modules/@babel/helper-module-imports/lib/import-builder.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require(\"assert\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  importDeclaration,\n  importDefaultSpecifier,\n  importNamespaceSpecifier,\n  importSpecifier,\n  memberExpression,\n  stringLiteral,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nclass ImportBuilder {\n  constructor(importedSource, scope, hub) {\n    this._statements = [];\n    this._resultName = null;\n    this._importedSource = void 0;\n    this._scope = scope;\n    this._hub = hub;\n    this._importedSource = importedSource;\n  }\n\n  done() {\n    return {\n      statements: this._statements,\n      resultName: this._resultName\n    };\n  }\n\n  import() {\n    this._statements.push(importDeclaration([], stringLiteral(this._importedSource)));\n\n    return this;\n  }\n\n  require() {\n    this._statements.push(expressionStatement(callExpression(identifier(\"require\"), [stringLiteral(this._importedSource)])));\n\n    return this;\n  }\n\n  namespace(name = \"namespace\") {\n    const local = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importNamespaceSpecifier(local)];\n    this._resultName = cloneNode(local);\n    return this;\n  }\n\n  default(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importDefaultSpecifier(id)];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  named(name, importName) {\n    if (importName === \"default\") return this.default(name);\n\n    const id = this._scope.generateUidIdentifier(name);\n\n    const statement = this._statements[this._statements.length - 1];\n\n    _assert(statement.type === \"ImportDeclaration\");\n\n    _assert(statement.specifiers.length === 0);\n\n    statement.specifiers = [importSpecifier(id, identifier(importName))];\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  var(name) {\n    const id = this._scope.generateUidIdentifier(name);\n\n    let statement = this._statements[this._statements.length - 1];\n\n    if (statement.type !== \"ExpressionStatement\") {\n      _assert(this._resultName);\n\n      statement = expressionStatement(this._resultName);\n\n      this._statements.push(statement);\n    }\n\n    this._statements[this._statements.length - 1] = variableDeclaration(\"var\", [variableDeclarator(id, statement.expression)]);\n    this._resultName = cloneNode(id);\n    return this;\n  }\n\n  defaultInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireDefault\"));\n  }\n\n  wildcardInterop() {\n    return this._interop(this._hub.addHelper(\"interopRequireWildcard\"));\n  }\n\n  _interop(callee) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = callExpression(callee, [statement.expression]);\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = callExpression(callee, [statement.declarations[0].init]);\n    } else {\n      _assert.fail(\"Unexpected type.\");\n    }\n\n    return this;\n  }\n\n  prop(name) {\n    const statement = this._statements[this._statements.length - 1];\n\n    if (statement.type === \"ExpressionStatement\") {\n      statement.expression = memberExpression(statement.expression, identifier(name));\n    } else if (statement.type === \"VariableDeclaration\") {\n      _assert(statement.declarations.length === 1);\n\n      statement.declarations[0].init = memberExpression(statement.declarations[0].init, identifier(name));\n    } else {\n      _assert.fail(\"Unexpected type:\" + statement.type);\n    }\n\n    return this;\n  }\n\n  read(name) {\n    this._resultName = memberExpression(this._resultName, identifier(name));\n  }\n\n}\n\nexports.default = ImportBuilder;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}