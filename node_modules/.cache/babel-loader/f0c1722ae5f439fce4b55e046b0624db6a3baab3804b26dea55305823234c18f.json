{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _rewriteStackTrace = require(\"./rewrite-stack-trace\");\nclass ConfigError extends Error {\n  constructor(message, filename) {\n    super(message);\n    (0, _rewriteStackTrace.expectedError)(this);\n    if (filename) (0, _rewriteStackTrace.injcectVirtualStackFrame)(this, filename);\n  }\n}\nexports.default = ConfigError;\n0 && 0;","map":{"version":3,"mappings":";;;;;;AAAA;AAEe,MAAMA,WAAW,SAASC,KAAK,CAAC;EAC7CC,WAAW,CAACC,OAAe,EAAEC,QAAiB,EAAE;IAC9C,KAAK,CAACD,OAAO,CAAC;IACd,oCAAa,EAAC,IAAI,CAAC;IACnB,IAAIC,QAAQ,EAAE,+CAAwB,EAAC,IAAI,EAAEA,QAAQ,CAAC;EACxD;AACF;AAACC;AAAA","names":["ConfigError","Error","constructor","message","filename","exports"],"sources":["/Users/elahehaslani/Work/Sample-Project/ticket-booking/ticket-booking/node_modules/@babel/core/src/errors/config-error.ts"],"sourcesContent":["import { injcectVirtualStackFrame, expectedError } from \"./rewrite-stack-trace\";\n\nexport default class ConfigError extends Error {\n  constructor(message: string, filename?: string) {\n    super(message);\n    expectedError(this);\n    if (filename) injcectVirtualStackFrame(this, filename);\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}