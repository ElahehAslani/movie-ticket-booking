{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Var = exports.User = exports.Statement = exports.SpreadProperty = exports.Scope = exports.RestProperty = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = exports.Referenced = exports.Pure = exports.NumericLiteralTypeAnnotation = exports.Generated = exports.ForAwaitStatement = exports.Flow = exports.Expression = exports.ExistentialTypeParam = exports.BlockScoped = exports.BindingIdentifier = void 0;\nconst ReferencedIdentifier = [\"Identifier\", \"JSXIdentifier\"];\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = [\"MemberExpression\"];\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = [\"Identifier\"];\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = [\"Statement\"];\nexports.Statement = Statement;\nconst Expression = [\"Expression\"];\nexports.Expression = Expression;\nconst Scope = [\"Scopable\", \"Pattern\"];\nexports.Scope = Scope;\nconst Referenced = null;\nexports.Referenced = Referenced;\nconst BlockScoped = null;\nexports.BlockScoped = BlockScoped;\nconst Var = [\"VariableDeclaration\"];\nexports.Var = Var;\nconst User = null;\nexports.User = User;\nconst Generated = null;\nexports.Generated = Generated;\nconst Pure = null;\nexports.Pure = Pure;\nconst Flow = [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"];\nexports.Flow = Flow;\nconst RestProperty = [\"RestElement\"];\nexports.RestProperty = RestProperty;\nconst SpreadProperty = [\"RestElement\"];\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = [\"ExistsTypeAnnotation\"];\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = [\"NumberLiteralTypeAnnotation\"];\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = [\"ForOfStatement\"];\nexports.ForAwaitStatement = ForAwaitStatement;","map":{"version":3,"mappings":";;;;;;AAyBO,MAAMA,oBAAwC,GAAG,CACtD,YAAY,EACZ,eAAe,CACP;AAACC;AAEJ,MAAMC,0BAA8C,GAAG,CAC5D,kBAAkB,CACV;AAACD;AAEJ,MAAME,iBAAqC,GAAG,CAAC,YAAY,CAAU;AAACF;AAEtE,MAAMG,SAA6B,GAAG,CAAC,WAAW,CAAU;AAACH;AAE7D,MAAMI,UAA8B,GAAG,CAAC,YAAY,CAAU;AAACJ;AAE/D,MAAMK,KAAyB,GAAG,CAAC,UAAU,EAAE,SAAS,CAAU;AAACL;AAEnE,MAAMM,UAA8B,GAAG,IAAY;AAACN;AAEpD,MAAMO,WAA+B,GAAG,IAAY;AAACP;AAErD,MAAMQ,GAAuB,GAAG,CAAC,qBAAqB,CAAC;AAACR;AAExD,MAAMS,IAAwB,GAAG,IAAY;AAACT;AAE9C,MAAMU,SAA6B,GAAG,IAAY;AAACV;AAEnD,MAAMW,IAAwB,GAAG,IAAY;AAACX;AAE9C,MAAMY,IAAwB,GAAG,CACtC,MAAM,EACN,mBAAmB,EACnB,mBAAmB,EACnB,iBAAiB,CACT;AAACZ;AAGJ,MAAMa,YAAgC,GAAG,CAAC,aAAa,CAAU;AAACb;AAElE,MAAMc,cAAkC,GAAG,CAAC,aAAa,CAAU;AAACd;AAEpE,MAAMe,oBAAwC,GAAG,CACtD,sBAAsB,CACd;AAACf;AAEJ,MAAMgB,4BAAgD,GAAG,CAC9D,6BAA6B,CACrB;AAAChB;AAEJ,MAAMiB,iBAAqC,GAAG,CACnD,gBAAgB,CACR;AAACjB","names":["ReferencedIdentifier","exports","ReferencedMemberExpression","BindingIdentifier","Statement","Expression","Scope","Referenced","BlockScoped","Var","User","Generated","Pure","Flow","RestProperty","SpreadProperty","ExistentialTypeParam","NumericLiteralTypeAnnotation","ForAwaitStatement"],"sources":["/Users/elahehaslani/Work/Sample-Project/ticket-booking/ticket-booking/node_modules/@babel/traverse/src/path/lib/virtual-types.ts"],"sourcesContent":["import type * as t from \"@babel/types\";\n\nexport interface VirtualTypeAliases {\n  BindingIdentifier: t.Identifier;\n  BlockScoped: t.Node;\n  ExistentialTypeParam: t.ExistsTypeAnnotation;\n  Expression: t.Expression;\n  Flow: t.Flow | t.ImportDeclaration | t.ExportDeclaration | t.ImportSpecifier;\n  ForAwaitStatement: t.ForOfStatement;\n  Generated: t.Node;\n  NumericLiteralTypeAnnotation: t.NumberLiteralTypeAnnotation;\n  Pure: t.Node;\n  Referenced: t.Node;\n  ReferencedIdentifier: t.Identifier | t.JSXIdentifier;\n  ReferencedMemberExpression: t.MemberExpression;\n  RestProperty: t.RestElement;\n  Scope: t.Scopable | t.Pattern;\n  SpreadProperty: t.RestElement;\n  Statement: t.Statement;\n  User: t.Node;\n  Var: t.VariableDeclaration;\n}\n\ntype VirtualTypeMapping = readonly (t.Node[\"type\"] | keyof t.Aliases)[] | null;\n\nexport const ReferencedIdentifier: VirtualTypeMapping = [\n  \"Identifier\",\n  \"JSXIdentifier\",\n] as const;\n\nexport const ReferencedMemberExpression: VirtualTypeMapping = [\n  \"MemberExpression\",\n] as const;\n\nexport const BindingIdentifier: VirtualTypeMapping = [\"Identifier\"] as const;\n\nexport const Statement: VirtualTypeMapping = [\"Statement\"] as const;\n\nexport const Expression: VirtualTypeMapping = [\"Expression\"] as const;\n\nexport const Scope: VirtualTypeMapping = [\"Scopable\", \"Pattern\"] as const;\n\nexport const Referenced: VirtualTypeMapping = null as null;\n\nexport const BlockScoped: VirtualTypeMapping = null as null;\n\nexport const Var: VirtualTypeMapping = [\"VariableDeclaration\"];\n\nexport const User: VirtualTypeMapping = null as null;\n\nexport const Generated: VirtualTypeMapping = null as null;\n\nexport const Pure: VirtualTypeMapping = null as null;\n\nexport const Flow: VirtualTypeMapping = [\n  \"Flow\",\n  \"ImportDeclaration\",\n  \"ExportDeclaration\",\n  \"ImportSpecifier\",\n] as const;\n\n// TODO: 7.0 Backwards Compat\nexport const RestProperty: VirtualTypeMapping = [\"RestElement\"] as const;\n\nexport const SpreadProperty: VirtualTypeMapping = [\"RestElement\"] as const;\n\nexport const ExistentialTypeParam: VirtualTypeMapping = [\n  \"ExistsTypeAnnotation\",\n] as const;\n\nexport const NumericLiteralTypeAnnotation: VirtualTypeMapping = [\n  \"NumberLiteralTypeAnnotation\",\n] as const;\n\nexport const ForAwaitStatement: VirtualTypeMapping = [\n  \"ForOfStatement\",\n] as const;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}