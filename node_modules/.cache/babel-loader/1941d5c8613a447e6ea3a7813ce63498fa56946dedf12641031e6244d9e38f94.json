{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transform = void 0;\nexports.transformAsync = transformAsync;\nexports.transformSync = transformSync;\nfunction _gensync() {\n  const data = require(\"gensync\");\n  _gensync = function () {\n    return data;\n  };\n  return data;\n}\nvar _config = require(\"./config\");\nvar _transformation = require(\"./transformation\");\nvar _rewriteStackTrace = require(\"./errors/rewrite-stack-trace\");\nconst transformRunner = _gensync()(function* transform(code, opts) {\n  const config = yield* (0, _config.default)(opts);\n  if (config === null) return null;\n  return yield* (0, _transformation.run)(config, code);\n});\nconst transform = function transform(code, optsOrCallback, maybeCallback) {\n  let opts;\n  let callback;\n  if (typeof optsOrCallback === \"function\") {\n    callback = optsOrCallback;\n    opts = undefined;\n  } else {\n    opts = optsOrCallback;\n    callback = maybeCallback;\n  }\n  if (callback === undefined) {\n    {\n      return (0, _rewriteStackTrace.beginHiddenCallStack)(transformRunner.sync)(code, opts);\n    }\n  }\n  (0, _rewriteStackTrace.beginHiddenCallStack)(transformRunner.errback)(code, opts, callback);\n};\nexports.transform = transform;\nfunction transformSync() {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(transformRunner.sync)(...arguments);\n}\nfunction transformAsync() {\n  return (0, _rewriteStackTrace.beginHiddenCallStack)(transformRunner.async)(...arguments);\n}\n0 && 0;","map":{"version":3,"mappings":";;;;;;;;AAAA;EAAA;EAAAA;IAAA;EAAA;EAAA;AAAA;AAEA;AAEA;AAGA;AAcA,MAAMC,eAAe,GAAGC,UAAO,CAAC,UAAUC,SAAS,CACjDC,IAAY,EACZC,IAAmB,EACS;EAC5B,MAAMC,MAA6B,GAAG,OAAO,mBAAU,EAACD,IAAI,CAAC;EAC7D,IAAIC,MAAM,KAAK,IAAI,EAAE,OAAO,IAAI;EAEhC,OAAO,OAAO,uBAAG,EAACA,MAAM,EAAEF,IAAI,CAAC;AACjC,CAAC,CAAC;AAEK,MAAMD,SAAoB,GAAG,SAASA,SAAS,CACpDC,IAAI,EACJG,cAAqE,EACrEC,aAAkC,EAClC;EACA,IAAIH,IAAqC;EACzC,IAAII,QAAwC;EAC5C,IAAI,OAAOF,cAAc,KAAK,UAAU,EAAE;IACxCE,QAAQ,GAAGF,cAAc;IACzBF,IAAI,GAAGK,SAAS;EAClB,CAAC,MAAM;IACLL,IAAI,GAAGE,cAAc;IACrBE,QAAQ,GAAGD,aAAa;EAC1B;EAEA,IAAIC,QAAQ,KAAKC,SAAS,EAAE;IAKnB;MAIL,OAAO,2CAAoB,EAACT,eAAe,CAACU,IAAI,CAAC,CAACP,IAAI,EAAEC,IAAI,CAAC;IAC/D;EACF;EAEA,2CAAoB,EAACJ,eAAe,CAACW,OAAO,CAAC,CAACR,IAAI,EAAEC,IAAI,EAAEI,QAAQ,CAAC;AACrE,CAAC;AAACI;AAEK,SAASC,aAAa,GAE3B;EACA,OAAO,2CAAoB,EAACb,eAAe,CAACU,IAAI,CAAC,CAAC,YAAO,CAAC;AAC5D;AACO,SAASI,cAAc,GAE5B;EACA,OAAO,2CAAoB,EAACd,eAAe,CAACe,KAAK,CAAC,CAAC,YAAO,CAAC;AAC7D;AAAC","names":["_gensync","transformRunner","gensync","transform","code","opts","config","optsOrCallback","maybeCallback","callback","undefined","sync","errback","exports","transformSync","transformAsync","async"],"sources":["/Users/elahehaslani/Work/Sample-Project/ticket-booking/ticket-booking/node_modules/@babel/core/src/transform.ts"],"sourcesContent":["import gensync, { type Handler } from \"gensync\";\n\nimport loadConfig from \"./config\";\nimport type { InputOptions, ResolvedConfig } from \"./config\";\nimport { run } from \"./transformation\";\n\nimport type { FileResult, FileResultCallback } from \"./transformation\";\nimport { beginHiddenCallStack } from \"./errors/rewrite-stack-trace\";\n\nexport type { FileResult } from \"./transformation\";\n\ntype Transform = {\n  (code: string, callback: FileResultCallback): void;\n  (\n    code: string,\n    opts: InputOptions | undefined | null,\n    callback: FileResultCallback,\n  ): void;\n  (code: string, opts?: InputOptions | null): FileResult | null;\n};\n\nconst transformRunner = gensync(function* transform(\n  code: string,\n  opts?: InputOptions,\n): Handler<FileResult | null> {\n  const config: ResolvedConfig | null = yield* loadConfig(opts);\n  if (config === null) return null;\n\n  return yield* run(config, code);\n});\n\nexport const transform: Transform = function transform(\n  code,\n  optsOrCallback?: InputOptions | null | undefined | FileResultCallback,\n  maybeCallback?: FileResultCallback,\n) {\n  let opts: InputOptions | undefined | null;\n  let callback: FileResultCallback | undefined;\n  if (typeof optsOrCallback === \"function\") {\n    callback = optsOrCallback;\n    opts = undefined;\n  } else {\n    opts = optsOrCallback;\n    callback = maybeCallback;\n  }\n\n  if (callback === undefined) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"Starting from Babel 8.0.0, the 'transform' function expects a callback. If you need to call it synchronously, please use 'transformSync'.\",\n      );\n    } else {\n      // console.warn(\n      //   \"Starting from Babel 8.0.0, the 'transform' function will expect a callback. If you need to call it synchronously, please use 'transformSync'.\",\n      // );\n      return beginHiddenCallStack(transformRunner.sync)(code, opts);\n    }\n  }\n\n  beginHiddenCallStack(transformRunner.errback)(code, opts, callback);\n};\n\nexport function transformSync(\n  ...args: Parameters<typeof transformRunner.sync>\n) {\n  return beginHiddenCallStack(transformRunner.sync)(...args);\n}\nexport function transformAsync(\n  ...args: Parameters<typeof transformRunner.async>\n) {\n  return beginHiddenCallStack(transformRunner.async)(...args);\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}